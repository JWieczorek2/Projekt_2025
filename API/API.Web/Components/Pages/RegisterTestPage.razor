@page "/register-test"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject IOsobyService OsobyService

<h3>RegisterTestPage</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleStandardRegister" FormName="register">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="firstName" class="form-label">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="registerModel.FirstName" />
    </div>

    <div class="mb-3">
        <label for="lastName" class="form-label">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="registerModel.LastName" />
    </div>

    <div class="mb-3">
        <label for="indexNumber" class="form-label">Index Number</label>
        <InputText id="indexNumber" class="form-control" @bind-Value="registerModel.IndexNumber" />
    </div>

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="registerModel.Email" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
    </div>
</EditForm>

<div class="d-flex gap-2">
    <button type="submit" class="btn btn-success">Zarejestruj się</button>
    <button type="button" class="btn btn-outline-primary" @onclick="HandleUniversityRegister">
        Zarejestruj się przez uczelnię
    </button>
</div>

@code {
    private RegisterModel registerModel = new();
    private string Message;
    private bool IsSuccess;
    
    protected override void OnInitialized()
    {
        Console.WriteLine("✅ Register test page initialized");
    }
    
    private async Task HandleStandardRegister()
    {
        Console.WriteLine("handle standard register");
        var (success, message) = await OsobyService.RegisterAsync(registerModel);
        Message = message;
        IsSuccess = success;

        if (success)
        {
            await Task.Delay(2000);
            Navigation.NavigateTo("/login-test");
        }
    }

    private void HandleUniversityRegister()
    {
        Console.WriteLine("🎓 Rejestracja przez uczelnię");
   
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "First name is required")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last name is required")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "Index number is required")]
        public string IndexNumber { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters long")]
        public string Password { get; set; }
    }
}
